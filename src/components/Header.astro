---
import HeaderLink from "./HeaderLink.astro";
import SuggestionItem from "./SuggestionItem.astro";
interface suggestionItem {
  title: string;
  description: string;
  imageSrc: string;
  slug: string;
}
const items: suggestionItem[] = [
  {
    title: "Astro",
    description: "Astro is a new kind of static site builder that delivers lightning-fast performance with a modern developer experience.",
    imageSrc: "https://astro.build/img/logo.svg",
    slug: "/astro",
  },
  {
    title: "Snowpack",
    description: "Snowpack is a lightning-fast frontend build tool, designed for the modern web.",
    imageSrc: "https://snowpack.dev/img/logo.png",
    slug: "/snowpack",
  },
  {
    title: "Preact",
    description: "Preact is a fast 3kB alternative to React with the same modern API.",
    imageSrc: "https://preactjs.com/img/logo.svg",
    slug: "/preact",
  },
  {
    title: "TypeScript",
    description: "TypeScript is a typed superset of JavaScript that compiles to plain JavaScript.",
    imageSrc: "https://www.typescriptlang.org/assets/images/icons/apple-touch-icon.png",
    slug: "/typescript",
  },
  {
    title: "Tailwind CSS",
    description: "Tailwind CSS is a utility-first CSS framework for rapid UI development.",
    imageSrc: "https://tailwindcss.com/favicon-32x32.png",
    slug: "/tailwind",
  },
  {
    title: "Vite",
    description: "Vite is a build tool that aims to provide a faster and leaner development experience for modern web projects.",
    imageSrc: "https://vitejs.dev/logo.svg",
    slug: "/vite",
  },
  {
    title: "ESBuild",
    description: "ESBuild is an extremely fast JavaScript bundler and minifier.",
    imageSrc: "https://esbuild.github.io/favicon.svg",
    slug: "/esbuild",
  },
  {
    title: "Deno",
    description: "Deno is a simple, modern, and secure runtime for JavaScript and TypeScript that uses V8 and is built in Rust.",
    imageSrc: "https://deno.land/logo.svg",
    slug: "/deno",
  },
  {
    title: "Svelte",
    description: "Svelte is a radical new approach to building user interfaces with a compiler that converts your components into efficient JavaScript.",
    imageSrc: "https://svelte.dev/favicon.png",
    slug: "/svelte",
  }
];
---

<header class="items-start hidden lg:flex">

  <nav class="w-full flex gap-10">
    <div class="w-[100%] flex flex-col items-center justify-center">
      <div class="flex gap-4 items-center justify-end py-4 mr-10 w-full">
        <h2 class="!text-3xl font-bold text-left">
          Fundaleon
        </h2>
        <div class="w-96 mr-10 relative">
          <label class="input input-md input-bordered flex items-center gap-2">
            <input
              type="text"
              id="autoComplete"
              type="search"
              dir="ltr"
              spellcheck="false"
              autocorrect="off"
              autocomplete="off"
              autocapitalize="off"
              maxlength="2048"
              tabindex="1"
              class="grow"
              placeholder="Buscar en la pÃ¡gina"
            />
            <svg
              xmlns="http://www.w3.org/2000/svg"
              viewBox="0 0 16 16"
              fill="currentColor"
              class="w-7 h-7 opacity-70"
              ><path
                fill="evenodd"
                d="M9.965 11.026a5 5 0 1 1 1.06-1.06l2.755 2.754a.75.75 0 1 1-1.06 1.06l-2.755-2.754ZM10.5 7a3.5 3.5 0 1 1-7 0 3.5 3.5 0 0 1 7 0Z"
                clip="evenodd"></path></svg
            >
          </label>
          <ul
            id="searchResults"
            style="display: none;"
            class="absolute top-14 left-0 w-96 bg-white border border-gray-200 rounded-md shadow-lg z-10 p-2 max-h-[500px] overflow-y-auto"
          >
            <!-- search results go here -->
            <!-- Test search results -->
            {
              items.map((heading) => (
                <SuggestionItem
                  title={heading.title}
                  description={heading.description}
                  imageSrc={heading.imageSrc}
                  slug={heading.slug}
                />
              ))
            }
          </ul>
        </div>
        <div class="social-links mr-4 gap-6">
          <a href="https://twitter.com/astrodotbuild" target="_blank">
            <span class="sr-only">Sigue a Fundaleon en X</span>
            <svg viewBox="0 0 16 16" aria-hidden="true" width="32" height="32"
              ><path
                fill="currentColor"
                d="M5.026 15c6.038 0 9.341-5.003 9.341-9.334 0-.14 0-.282-.006-.422A6.685 6.685 0 0 0 16 3.542a6.658 6.658 0 0 1-1.889.518 3.301 3.301 0 0 0 1.447-1.817 6.533 6.533 0 0 1-2.087.793A3.286 3.286 0 0 0 7.875 6.03a9.325 9.325 0 0 1-6.767-3.429 3.289 3.289 0 0 0 1.018 4.382A3.323 3.323 0 0 1 .64 6.575v.045a3.288 3.288 0 0 0 2.632 3.218 3.203 3.203 0 0 1-.865.115 3.23 3.23 0 0 1-.614-.057 3.283 3.283 0 0 0 3.067 2.277A6.588 6.588 0 0 1 .78 13.58a6.32 6.32 0 0 1-.78-.045A9.344 9.344 0 0 0 5.026 15z"
              ></path></svg
            >
          </a>
          <a href="https://github.com/withastro/astro" target="_blank">
            <span class="sr-only">Sigue a Fundaleon en Facebook</span>
            <svg viewBox="0 0 16 16" aria-hidden="true" width="32" height="32"
              ><path
                fill="currentColor"
                d="M8 0C3.58 0 0 3.58 0 8c0 3.54 2.29 6.53 5.47 7.59.4.07.55-.17.55-.38 0-.19-.01-.82-.01-1.49-2.01.37-2.53-.49-2.69-.94-.09-.23-.48-.94-.82-1.13-.28-.15-.68-.52-.01-.53.63-.01 1.08.58 1.23.82.72 1.21 1.87.87 2.33.66.07-.52.28-.87.51-1.07-1.78-.2-3.64-.89-3.64-3.95 0-.87.31-1.59.82-2.15-.08-.2-.36-1.02.08-2.12 0 0 .67-.21 2.2.82.64-.18 1.32-.27 2-.27.68 0 1.36.09 2 .27 1.53-1.04 2.2-.82 2.2-.82.44 1.1.16 1.92.08 2.12.51.56.82 1.27.82 2.15 0 3.07-1.87 3.75-3.65 3.95.29.25.54.73.54 1.48 0 1.07-.01 1.93-.01 2.2 0 .21.15.46.55.38A8.012 8.012 0 0 0 16 8c0-4.42-3.58-8-8-8z"
              ></path></svg
            >
          </a>
        </div>
      </div>
      <div class="internal-links flex flex-wrap w-full justify-around">
        <HeaderLink href="/">Inicio</HeaderLink>
        <HeaderLink href="/blog">Blog</HeaderLink>
        <HeaderLink href="/historial">Historial</HeaderLink>
        <HeaderLink href="/galeria">Galeria</HeaderLink>
        <HeaderLink href="/biblioteca">Biblioteca</HeaderLink>
        <HeaderLink href="/contacto">Contacto</HeaderLink>
        <HeaderLink href="/nosotros">Sobre Nosotros</HeaderLink>
      </div>
    </div>
  </nav>
</header>

<script>
  // vanilla js automcomplete with no libraries
  const autoCompleteInput = document.getElementById("autoComplete");
  const allHeadings = Array.from(document.querySelectorAll(".suggestedResult"));
  const searchResults = document.getElementById("searchResults") as HTMLElement;

  autoCompleteInput?.addEventListener("input", (e: any) => {
    const query = e.target.value.toLowerCase();
    const results = allHeadings.filter((heading) => {
      return heading.textContent?.toLowerCase().includes(query);
    });

    searchResults.innerHTML = "";

    // If results are 0 show a message
    if (results.length === 0) {
      searchResults.style.display = "block";
      const li = document.createElement("li");
      li.innerHTML = `<a href="#" class="font-bold text-lg p-2">No se encontraron resultados</a>`;
      searchResults?.appendChild(li);
    }

    results.forEach((result) => {
      searchResults.style.display = "block";
      const li = document.createElement("li");
      li.innerHTML = `<a href="#" class="font-bold text-lg p-2">${result.innerHTML}</a>`;
      searchResults?.appendChild(li);
    });
  });

  // close search results when clicking outside
  document.addEventListener("click", (e) => {
    if (e.target !== autoCompleteInput) {
      searchResults.innerHTML = "";
      searchResults.style.display = "none";
    }
  });

  // close search results when pressing escape
  document.addEventListener("keydown", (e) => {
    if (e.key === "Escape") {
      searchResults.innerHTML = "";
      searchResults.style.display = "none";
    }
  });

  // close search results when clicking on a result
  searchResults.addEventListener("click", (e) => {
    searchResults.innerHTML = "";
    searchResults.style.display = "none";
  });
</script>

<style>
  header {
    margin: 0;
    padding: 0 1em;
    background: white;
    box-shadow: 0 2px 8px rgba(var(--black), 5%);
  }
  h2 {
    margin: 0;
    font-size: 1em;
  }

  h2 a,
  h2 a.active {
    text-decoration: none;
  }
  nav {
    display: flex;
    align-items: flex-start;
    justify-content: space-between;
  }
  nav a {
    padding: 0.5em 0.5em;
    border-bottom: 4px solid transparent;
    text-decoration: none;
  }
  nav a.active {
    text-decoration: none;
    border-bottom-color: var(--accent);
  }
  .social-links,
  .social-links a {
    display: flex;
  }

  @media (max-width: 720px) {
    .social-links {
      display: none;
    }
  }
</style>
