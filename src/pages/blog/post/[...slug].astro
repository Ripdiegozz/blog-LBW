---
import type { GetStaticPaths } from "astro";
import fetchApi from "lib/strapi";
import type { Post } from "interfaces/post";
import PageLayout from "@/layouts/PageLayout.astro";
import Header from "@/components/Header.astro";
import MobileHeader from "@/components/MobileHeader.astro";
import FormattedDate from "@/components/FormattedDate.astro";
import TextRendererComponent from "@/components/blog/post/TextRendererComponent";
import { environment } from "@/environments/enviroment.develop";

export const getStaticPaths = (async () => {
  const posts = await fetchApi<Post[]>({
    endpoint: "/posts",
    wrappedByKey: "data",
  });

  return posts.map((post) => {
    return {
      params: {
        slug: post.attributes.slug,
      },
    };
  });
}) satisfies GetStaticPaths;

const { slug } = Astro.params;

const post = await fetchApi<Post>({
  endpoint: `/posts?filters[slug][$eq]=${slug}`,
  wrappedByKey: "data",
  wrappedByList: true,
});
---

<PageLayout title="Blog Fundaleon" description="Blog posts by the author">
  <Header />
  <MobileHeader />
  <div class="pb-8 pt-16 lg:pt-0 container mx-auto">
    <div class="py-6 md:px-6 md:py-10 lg:py-12">
      <article class="prose prose-gray mx-auto max-w-6xl dark:prose-invert">
        <header>
          <div class="space-y-2 not-prose md:pl-6">
            <h2
              class="text-4xl font-extrabold tracking-tight lg:text-5xl lg:leading-[3.5rem]"
            >
              {post.attributes.title}
            </h2>
            <p class="text-gray-500 dark:text-gray-400">
              Publicado el: <FormattedDate
                date={new Date(post.attributes.publishedAt)}
              />
            </p>
            <p class="text-gray-500 dark:text-gray-400 pb-8">
              Autor: {post.attributes.author.data.attributes.name}
            </p>
          </div>
          <p class="text-lg pb-8 md:pl-6">
            {post.attributes.description}
          </p>
          <img
            alt={post.attributes.cover.data.attributes.alternativeText}
            class="aspect-video overflow-hidden rounded-lg object-fill mx-auto h-auto w-full md:h-[500px] md:w-[1100px]"
            src={`${environment.imagesUrl}${post.attributes.cover.data.attributes.url}`}
          />
        </header>
        <body class="mx-auto">
          <div class="prose dark:prose-invert">
            <div class="pb-10 pt-2 w-full flex flex-col items-center justify-center">
              <TextRendererComponent content={post.attributes.text} quotePosition="right"/>
            </div>
          </div>
        </body>
      </article>
    </div>
  </div>
</PageLayout>
